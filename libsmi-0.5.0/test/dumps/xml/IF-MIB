<?xml version="1.0"?>
<!DOCTYPE smi SYSTEM "http://www.ibr.cs.tu-bs.de/projects/nmrg/smi.dtd">

<!-- This module has been generated by smidump 0.4.5. Do not edit. -->

<smi xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:noNamespaceSchemaLocation="http://www.ibr.cs.tu-bs.de/projects/nmrg/smi.xsd">
  <module name="IF-MIB" language="SMIv2">
    <organization>  
        IETF Interfaces MIB Working Group
    </organization>
    <contact>       
           Keith McCloghrie
        Cisco Systems, Inc.
        170 West Tasman Drive
        San Jose, CA  95134-1706
        US
        
        408-526-5260
        kzm@cisco.com
    </contact>
    <description>
        The MIB module to describe generic objects for network
        interface sub-layers.  This MIB is an updated version of
        MIB-II's ifTable, and incorporates the extensions defined in
        RFC 1229.
    </description>
    <revision date="2000-06-14 00:00">
      <description>
          Clarifications agreed upon by the Interfaces MIB WG, and
          published as RFC 2863.
      </description>
    </revision>
    <revision date="1996-02-28 21:55">
      <description>
          Revisions made by the Interfaces MIB WG, and published in
          RFC 2233.
      </description>
    </revision>
    <revision date="1993-11-08 21:55">
      <description>
          Initial revision, published as part of RFC 1573.
      </description>
    </revision>
    <identity node="ifMIB"/>
  </module>

  <imports>
    <import module="SNMPv2-SMI" name="MODULE-IDENTITY"/>
    <import module="SNMPv2-SMI" name="OBJECT-TYPE"/>
    <import module="SNMPv2-SMI" name="Counter32"/>
    <import module="SNMPv2-SMI" name="Gauge32"/>
    <import module="SNMPv2-SMI" name="Counter64"/>
    <import module="SNMPv2-SMI" name="Integer32"/>
    <import module="SNMPv2-SMI" name="TimeTicks"/>
    <import module="SNMPv2-SMI" name="mib-2"/>
    <import module="SNMPv2-SMI" name="NOTIFICATION-TYPE"/>
    <import module="SNMPv2-TC" name="TEXTUAL-CONVENTION"/>
    <import module="SNMPv2-TC" name="DisplayString"/>
    <import module="SNMPv2-TC" name="PhysAddress"/>
    <import module="SNMPv2-TC" name="TruthValue"/>
    <import module="SNMPv2-TC" name="RowStatus"/>
    <import module="SNMPv2-TC" name="TimeStamp"/>
    <import module="SNMPv2-TC" name="AutonomousType"/>
    <import module="SNMPv2-TC" name="TestAndIncr"/>
    <import module="SNMPv2-CONF" name="MODULE-COMPLIANCE"/>
    <import module="SNMPv2-CONF" name="OBJECT-GROUP"/>
    <import module="SNMPv2-CONF" name="NOTIFICATION-GROUP"/>
    <import module="SNMPv2-MIB" name="snmpTraps"/>
    <import module="IANAifType-MIB" name="IANAifType"/>
  </imports>

  <typedefs>
    <typedef name="OwnerString" basetype="OctetString" status="deprecated">
      <range min="0" max="255"/>
      <format>255a</format>
      <description>
          This data type is used to model an administratively
          assigned name of the owner of a resource.  This information
          is taken from the NVT ASCII character set.  It is suggested
          that this name contain one or more of the following: ASCII
          form of the manager station's transport address, management
          station name (e.g., domain name), network management
          personnel's name, location, or phone number.  In some cases
          the agent itself will be the owner of an entry.  In these
          cases, this string shall be set to a string starting with
          'agent'.
      </description>
    </typedef>
    <typedef name="InterfaceIndex" basetype="Integer32" status="current">
      <range min="1" max="2147483647"/>
      <format>d</format>
      <description>
          A unique value, greater than zero, for each interface or
          interface sub-layer in the managed system.  It is
          recommended that values are assigned contiguously starting
          from 1.  The value for each interface sub-layer must remain
          constant at least from one re-initialization of the entity's
          network management system to the next re-initialization.
      </description>
    </typedef>
    <typedef name="InterfaceIndexOrZero" basetype="Integer32" status="current">
      <range min="0" max="2147483647"/>
      <format>d</format>
      <description>
          This textual convention is an extension of the
          InterfaceIndex convention.  The latter defines a greater
          than zero value used to identify an interface or interface
          sub-layer in the managed system.  This extension permits the
          additional value of zero.  the value zero is object-specific
          and must therefore be defined as part of the description of
          any object which uses this syntax.  Examples of the usage of
          zero might include situations where interface was unknown,
          or when none or all interfaces need to be referenced.
      </description>
    </typedef>
  </typedefs>

  <nodes>
    <node name="interfaces" oid="1.3.6.1.2.1.2">
    </node>
    <scalar name="ifNumber" oid="1.3.6.1.2.1.2.1" status="current">
      <syntax>
        <type module="" name="Integer32"/>
      </syntax>
      <access>readonly</access>
      <description>
          The number of network interfaces (regardless of their
          current state) present on this system.
      </description>
    </scalar>
    <table name="ifTable" oid="1.3.6.1.2.1.2.2" status="current">
      <description>
          A list of interface entries.  The number of entries is
          given by the value of ifNumber.
      </description>
      <row name="ifEntry" oid="1.3.6.1.2.1.2.2.1" status="current">
        <linkage>
          <index module="IF-MIB" name="ifIndex"/>
        </linkage>
        <description>
            An entry containing management information applicable to a
            particular interface.
        </description>
        <column name="ifIndex" oid="1.3.6.1.2.1.2.2.1.1" status="current">
          <syntax>
            <type module="IF-MIB" name="InterfaceIndex"/>
          </syntax>
          <access>readonly</access>
          <description>
              A unique value, greater than zero, for each interface.  It
              is recommended that values are assigned contiguously
              starting from 1.  The value for each interface sub-layer
              must remain constant at least from one re-initialization of
              the entity's network management system to the next re-
              initialization.
          </description>
        </column>
        <column name="ifDescr" oid="1.3.6.1.2.1.2.2.1.2" status="current">
          <syntax>
            <typedef basetype="OctetString">
              <parent module="SNMPv2-TC" name="DisplayString"/>
              <range min="0" max="255"/>
            </typedef>
          </syntax>
          <access>readonly</access>
          <description>
              A textual string containing information about the
              interface.  This string should include the name of the
              manufacturer, the product name and the version of the
              interface hardware/software.
          </description>
        </column>
        <column name="ifType" oid="1.3.6.1.2.1.2.2.1.3" status="current">
          <syntax>
            <type module="IANAifType-MIB" name="IANAifType"/>
          </syntax>
          <access>readonly</access>
          <description>
              The type of interface.  Additional values for ifType are
              assigned by the Internet Assigned Numbers Authority (IANA),
              through updating the syntax of the IANAifType textual
              convention.
          </description>
        </column>
        <column name="ifMtu" oid="1.3.6.1.2.1.2.2.1.4" status="current">
          <syntax>
            <type module="" name="Integer32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The size of the largest packet which can be sent/received
              on the interface, specified in octets.  For interfaces that
              are used for transmitting network datagrams, this is the
              size of the largest network datagram that can be sent on the
              interface.
          </description>
        </column>
        <column name="ifSpeed" oid="1.3.6.1.2.1.2.2.1.5" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Gauge32"/>
          </syntax>
          <access>readonly</access>
          <description>
              An estimate of the interface's current bandwidth in bits
              per second.  For interfaces which do not vary in bandwidth
              or for those where no accurate estimation can be made, this
              object should contain the nominal bandwidth.  If the
              bandwidth of the interface is greater than the maximum value
              reportable by this object then this object should report its
              maximum value (4,294,967,295) and ifHighSpeed must be used
              to report the interace's speed.  For a sub-layer which has
              no concept of bandwidth, this object should be zero.
          </description>
        </column>
        <column name="ifPhysAddress" oid="1.3.6.1.2.1.2.2.1.6" status="current">
          <syntax>
            <type module="SNMPv2-TC" name="PhysAddress"/>
          </syntax>
          <access>readonly</access>
          <description>
              The interface's address at its protocol sub-layer.  For
              example, for an 802.x interface, this object normally
              contains a MAC address.  The interface's media-specific MIB
              must define the bit and byte ordering and the format of the
              value of this object.  For interfaces which do not have such
              an address (e.g., a serial line), this object should contain
              an octet string of zero length.
          </description>
        </column>
        <column name="ifAdminStatus" oid="1.3.6.1.2.1.2.2.1.7" status="current">
          <syntax>
            <typedef basetype="Enumeration">
              <namednumber name="up" number="1"/>
              <namednumber name="down" number="2"/>
              <namednumber name="testing" number="3"/>
            </typedef>
          </syntax>
          <access>readwrite</access>
          <description>
              The desired state of the interface.  The testing(3) state
              indicates that no operational packets can be passed.  When a
              managed system initializes, all interfaces start with
              ifAdminStatus in the down(2) state.  As a result of either
              explicit management action or per configuration information
              retained by the managed system, ifAdminStatus is then
              changed to either the up(1) or testing(3) states (or remains
              in the down(2) state).
          </description>
        </column>
        <column name="ifOperStatus" oid="1.3.6.1.2.1.2.2.1.8" status="current">
          <syntax>
            <typedef basetype="Enumeration">
              <namednumber name="up" number="1"/>
              <namednumber name="down" number="2"/>
              <namednumber name="testing" number="3"/>
              <namednumber name="unknown" number="4"/>
              <namednumber name="dormant" number="5"/>
              <namednumber name="notPresent" number="6"/>
              <namednumber name="lowerLayerDown" number="7"/>
            </typedef>
          </syntax>
          <access>readonly</access>
          <description>
              The current operational state of the interface.  The
              testing(3) state indicates that no operational packets can
              be passed.  If ifAdminStatus is down(2) then ifOperStatus
              should be down(2).  If ifAdminStatus is changed to up(1)
              then ifOperStatus should change to up(1) if the interface is
              ready to transmit and receive network traffic; it should
              change to dormant(5) if the interface is waiting for
              external actions (such as a serial line waiting for an
              incoming connection); it should remain in the down(2) state
              if and only if there is a fault that prevents it from going
              to the up(1) state; it should remain in the notPresent(6)
              state if the interface has missing (typically, hardware)
              components.
          </description>
        </column>
        <column name="ifLastChange" oid="1.3.6.1.2.1.2.2.1.9" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="TimeTicks"/>
          </syntax>
          <access>readonly</access>
          <description>
              The value of sysUpTime at the time the interface entered
              its current operational state.  If the current state was
              entered prior to the last re-initialization of the local
              network management subsystem, then this object contains a
              zero value.
          </description>
        </column>
        <column name="ifInOctets" oid="1.3.6.1.2.1.2.2.1.10" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The total number of octets received on the interface,
              
              
              including framing characters.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ifCounterDiscontinuityTime.
          </description>
        </column>
        <column name="ifInUcastPkts" oid="1.3.6.1.2.1.2.2.1.11" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The number of packets, delivered by this sub-layer to a
              higher (sub-)layer, which were not addressed to a multicast
              or broadcast address at this sub-layer.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ifCounterDiscontinuityTime.
          </description>
        </column>
        <column name="ifInNUcastPkts" oid="1.3.6.1.2.1.2.2.1.12" status="deprecated">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The number of packets, delivered by this sub-layer to a
              higher (sub-)layer, which were addressed to a multicast or
              broadcast address at this sub-layer.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ifCounterDiscontinuityTime.
              
              This object is deprecated in favour of ifInMulticastPkts and
              ifInBroadcastPkts.
          </description>
        </column>
        <column name="ifInDiscards" oid="1.3.6.1.2.1.2.2.1.13" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The number of inbound packets which were chosen to be
              discarded even though no errors had been detected to prevent
              
              
              their being deliverable to a higher-layer protocol.  One
              possible reason for discarding such a packet could be to
              free up buffer space.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ifCounterDiscontinuityTime.
          </description>
        </column>
        <column name="ifInErrors" oid="1.3.6.1.2.1.2.2.1.14" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              For packet-oriented interfaces, the number of inbound
              packets that contained errors preventing them from being
              deliverable to a higher-layer protocol.  For character-
              oriented or fixed-length interfaces, the number of inbound
              transmission units that contained errors preventing them
              from being deliverable to a higher-layer protocol.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ifCounterDiscontinuityTime.
          </description>
        </column>
        <column name="ifInUnknownProtos" oid="1.3.6.1.2.1.2.2.1.15" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              For packet-oriented interfaces, the number of packets
              received via the interface which were discarded because of
              an unknown or unsupported protocol.  For character-oriented
              or fixed-length interfaces that support protocol
              multiplexing the number of transmission units received via
              the interface which were discarded because of an unknown or
              unsupported protocol.  For any interface that does not
              support protocol multiplexing, this counter will always be
              0.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ifCounterDiscontinuityTime.
          </description>
        </column>
        <column name="ifOutOctets" oid="1.3.6.1.2.1.2.2.1.16" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The total number of octets transmitted out of the
              interface, including framing characters.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ifCounterDiscontinuityTime.
          </description>
        </column>
        <column name="ifOutUcastPkts" oid="1.3.6.1.2.1.2.2.1.17" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The total number of packets that higher-level protocols
              requested be transmitted, and which were not addressed to a
              multicast or broadcast address at this sub-layer, including
              those that were discarded or not sent.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ifCounterDiscontinuityTime.
          </description>
        </column>
        <column name="ifOutNUcastPkts" oid="1.3.6.1.2.1.2.2.1.18" status="deprecated">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The total number of packets that higher-level protocols
              requested be transmitted, and which were addressed to a
              multicast or broadcast address at this sub-layer, including
              those that were discarded or not sent.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ifCounterDiscontinuityTime.
              
              This object is deprecated in favour of ifOutMulticastPkts
              and ifOutBroadcastPkts.
          </description>
        </column>
        <column name="ifOutDiscards" oid="1.3.6.1.2.1.2.2.1.19" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The number of outbound packets which were chosen to be
              discarded even though no errors had been detected to prevent
              their being transmitted.  One possible reason for discarding
              such a packet could be to free up buffer space.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ifCounterDiscontinuityTime.
          </description>
        </column>
        <column name="ifOutErrors" oid="1.3.6.1.2.1.2.2.1.20" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              For packet-oriented interfaces, the number of outbound
              packets that could not be transmitted because of errors.
              For character-oriented or fixed-length interfaces, the
              number of outbound transmission units that could not be
              transmitted because of errors.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ifCounterDiscontinuityTime.
          </description>
        </column>
        <column name="ifOutQLen" oid="1.3.6.1.2.1.2.2.1.21" status="deprecated">
          <syntax>
            <type module="SNMPv2-SMI" name="Gauge32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The length of the output packet queue (in packets).
          </description>
        </column>
        <column name="ifSpecific" oid="1.3.6.1.2.1.2.2.1.22" status="deprecated">
          <syntax>
            <type module="" name="ObjectIdentifier"/>
          </syntax>
          <access>readonly</access>
          <description>
              A reference to MIB definitions specific to the particular
              media being used to realize the interface.  It is
              
              
              recommended that this value point to an instance of a MIB
              object in the media-specific MIB, i.e., that this object
              have the semantics associated with the InstancePointer
              textual convention defined in RFC 2579.  In fact, it is
              recommended that the media-specific MIB specify what value
              ifSpecific should/can take for values of ifType.  If no MIB
              definitions specific to the particular media are available,
              the value should be set to the OBJECT IDENTIFIER { 0 0 }.
          </description>
        </column>
      </row>
    </table>
    <node name="ifMIB" oid="1.3.6.1.2.1.31" status="current">
    </node>
    <node name="ifMIBObjects" oid="1.3.6.1.2.1.31.1">
    </node>
    <table name="ifXTable" oid="1.3.6.1.2.1.31.1.1" status="current">
      <description>
          A list of interface entries.  The number of entries is
          given by the value of ifNumber.  This table contains
          additional objects for the interface table.
      </description>
      <row name="ifXEntry" oid="1.3.6.1.2.1.31.1.1.1" status="current">
        <linkage>
          <augments module="IF-MIB" name="ifEntry"/>
        </linkage>
        <description>
            An entry containing additional management information
            applicable to a particular interface.
        </description>
        <column name="ifName" oid="1.3.6.1.2.1.31.1.1.1.1" status="current">
          <syntax>
            <type module="SNMPv2-TC" name="DisplayString"/>
          </syntax>
          <access>readonly</access>
          <description>
              The textual name of the interface.  The value of this
              object should be the name of the interface as assigned by
              the local device and should be suitable for use in commands
              entered at the device's `console'.  This might be a text
              name, such as `le0' or a simple port number, such as `1',
              depending on the interface naming syntax of the device.  If
              several entries in the ifTable together represent a single
              interface as named by the device, then each will have the
              same value of ifName.  Note that for an agent which responds
              to SNMP queries concerning an interface on some other
              (proxied) device, then the value of ifName for such an
              interface is the proxied device's local name for it.
              
              If there is no local name, or this object is otherwise not
              applicable, then this object contains a zero-length string.
          </description>
        </column>
        <column name="ifInMulticastPkts" oid="1.3.6.1.2.1.31.1.1.1.2" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The number of packets, delivered by this sub-layer to a
              higher (sub-)layer, which were addressed to a multicast
              address at this sub-layer.  For a MAC layer protocol, this
              includes both Group and Functional addresses.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              
              
              times as indicated by the value of
              ifCounterDiscontinuityTime.
          </description>
        </column>
        <column name="ifInBroadcastPkts" oid="1.3.6.1.2.1.31.1.1.1.3" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The number of packets, delivered by this sub-layer to a
              higher (sub-)layer, which were addressed to a broadcast
              address at this sub-layer.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ifCounterDiscontinuityTime.
          </description>
        </column>
        <column name="ifOutMulticastPkts" oid="1.3.6.1.2.1.31.1.1.1.4" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The total number of packets that higher-level protocols
              requested be transmitted, and which were addressed to a
              multicast address at this sub-layer, including those that
              were discarded or not sent.  For a MAC layer protocol, this
              includes both Group and Functional addresses.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ifCounterDiscontinuityTime.
          </description>
        </column>
        <column name="ifOutBroadcastPkts" oid="1.3.6.1.2.1.31.1.1.1.5" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The total number of packets that higher-level protocols
              requested be transmitted, and which were addressed to a
              broadcast address at this sub-layer, including those that
              were discarded or not sent.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              
              
              times as indicated by the value of
              ifCounterDiscontinuityTime.
          </description>
        </column>
        <column name="ifHCInOctets" oid="1.3.6.1.2.1.31.1.1.1.6" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter64"/>
          </syntax>
          <access>readonly</access>
          <description>
              The total number of octets received on the interface,
              including framing characters.  This object is a 64-bit
              version of ifInOctets.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ifCounterDiscontinuityTime.
          </description>
        </column>
        <column name="ifHCInUcastPkts" oid="1.3.6.1.2.1.31.1.1.1.7" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter64"/>
          </syntax>
          <access>readonly</access>
          <description>
              The number of packets, delivered by this sub-layer to a
              higher (sub-)layer, which were not addressed to a multicast
              or broadcast address at this sub-layer.  This object is a
              64-bit version of ifInUcastPkts.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ifCounterDiscontinuityTime.
          </description>
        </column>
        <column name="ifHCInMulticastPkts" oid="1.3.6.1.2.1.31.1.1.1.8" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter64"/>
          </syntax>
          <access>readonly</access>
          <description>
              The number of packets, delivered by this sub-layer to a
              higher (sub-)layer, which were addressed to a multicast
              address at this sub-layer.  For a MAC layer protocol, this
              includes both Group and Functional addresses.  This object
              is a 64-bit version of ifInMulticastPkts.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ifCounterDiscontinuityTime.
          </description>
        </column>
        <column name="ifHCInBroadcastPkts" oid="1.3.6.1.2.1.31.1.1.1.9" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter64"/>
          </syntax>
          <access>readonly</access>
          <description>
              The number of packets, delivered by this sub-layer to a
              higher (sub-)layer, which were addressed to a broadcast
              address at this sub-layer.  This object is a 64-bit version
              of ifInBroadcastPkts.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ifCounterDiscontinuityTime.
          </description>
        </column>
        <column name="ifHCOutOctets" oid="1.3.6.1.2.1.31.1.1.1.10" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter64"/>
          </syntax>
          <access>readonly</access>
          <description>
              The total number of octets transmitted out of the
              interface, including framing characters.  This object is a
              64-bit version of ifOutOctets.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ifCounterDiscontinuityTime.
          </description>
        </column>
        <column name="ifHCOutUcastPkts" oid="1.3.6.1.2.1.31.1.1.1.11" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter64"/>
          </syntax>
          <access>readonly</access>
          <description>
              The total number of packets that higher-level protocols
              requested be transmitted, and which were not addressed to a
              multicast or broadcast address at this sub-layer, including
              those that were discarded or not sent.  This object is a
              64-bit version of ifOutUcastPkts.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ifCounterDiscontinuityTime.
          </description>
        </column>
        <column name="ifHCOutMulticastPkts" oid="1.3.6.1.2.1.31.1.1.1.12" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter64"/>
          </syntax>
          <access>readonly</access>
          <description>
              The total number of packets that higher-level protocols
              requested be transmitted, and which were addressed to a
              multicast address at this sub-layer, including those that
              were discarded or not sent.  For a MAC layer protocol, this
              includes both Group and Functional addresses.  This object
              is a 64-bit version of ifOutMulticastPkts.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ifCounterDiscontinuityTime.
          </description>
        </column>
        <column name="ifHCOutBroadcastPkts" oid="1.3.6.1.2.1.31.1.1.1.13" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter64"/>
          </syntax>
          <access>readonly</access>
          <description>
              The total number of packets that higher-level protocols
              requested be transmitted, and which were addressed to a
              broadcast address at this sub-layer, including those that
              were discarded or not sent.  This object is a 64-bit version
              of ifOutBroadcastPkts.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ifCounterDiscontinuityTime.
          </description>
        </column>
        <column name="ifLinkUpDownTrapEnable" oid="1.3.6.1.2.1.31.1.1.1.14" status="current">
          <syntax>
            <typedef basetype="Enumeration">
              <namednumber name="enabled" number="1"/>
              <namednumber name="disabled" number="2"/>
            </typedef>
          </syntax>
          <access>readwrite</access>
          <description>
              Indicates whether linkUp/linkDown traps should be generated
              for this interface.
              
              By default, this object should have the value enabled(1) for
              interfaces which do not operate on 'top' of any other
              interface (as defined in the ifStackTable), and disabled(2)
              otherwise.
          </description>
        </column>
        <column name="ifHighSpeed" oid="1.3.6.1.2.1.31.1.1.1.15" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Gauge32"/>
          </syntax>
          <access>readonly</access>
          <description>
              An estimate of the interface's current bandwidth in units
              of 1,000,000 bits per second.  If this object reports a
              value of `n' then the speed of the interface is somewhere in
              the range of `n-500,000' to `n+499,999'.  For interfaces
              which do not vary in bandwidth or for those where no
              accurate estimation can be made, this object should contain
              the nominal bandwidth.  For a sub-layer which has no concept
              of bandwidth, this object should be zero.
          </description>
        </column>
        <column name="ifPromiscuousMode" oid="1.3.6.1.2.1.31.1.1.1.16" status="current">
          <syntax>
            <type module="SNMPv2-TC" name="TruthValue"/>
          </syntax>
          <access>readwrite</access>
          <description>
              This object has a value of false(2) if this interface only
              accepts packets/frames that are addressed to this station.
              This object has a value of true(1) when the station accepts
              all packets/frames transmitted on the media.  The value
              true(1) is only legal on certain types of media.  If legal,
              setting this object to a value of true(1) may require the
              interface to be reset before becoming effective.
              
              The value of ifPromiscuousMode does not affect the reception
              of broadcast and multicast packets/frames by the interface.
          </description>
        </column>
        <column name="ifConnectorPresent" oid="1.3.6.1.2.1.31.1.1.1.17" status="current">
          <syntax>
            <type module="SNMPv2-TC" name="TruthValue"/>
          </syntax>
          <access>readonly</access>
          <description>
              This object has the value 'true(1)' if the interface
              sublayer has a physical connector and the value 'false(2)'
              otherwise.
          </description>
        </column>
        <column name="ifAlias" oid="1.3.6.1.2.1.31.1.1.1.18" status="current">
          <syntax>
            <typedef basetype="OctetString">
              <parent module="SNMPv2-TC" name="DisplayString"/>
              <range min="0" max="64"/>
            </typedef>
          </syntax>
          <access>readwrite</access>
          <description>
              This object is an 'alias' name for the interface as
              specified by a network manager, and provides a non-volatile
              'handle' for the interface.
              
              On the first instantiation of an interface, the value of
              ifAlias associated with that interface is the zero-length
              string.  As and when a value is written into an instance of
              ifAlias through a network management set operation, then the
              agent must retain the supplied value in the ifAlias instance
              associated with the same interface for as long as that
              interface remains instantiated, including across all re-
              initializations/reboots of the network management system,
              including those which result in a change of the interface's
              ifIndex value.
              
              An example of the value which a network manager might store
              in this object for a WAN interface is the (Telco's) circuit
              number/identifier of the interface.
              
              Some agents may support write-access only for interfaces
              having particular values of ifType.  An agent which supports
              write access to this object is required to keep the value in
              non-volatile storage, but it may limit the length of new
              values depending on how much storage is already occupied by
              the current values for other interfaces.
          </description>
        </column>
        <column name="ifCounterDiscontinuityTime" oid="1.3.6.1.2.1.31.1.1.1.19" status="current">
          <syntax>
            <type module="SNMPv2-TC" name="TimeStamp"/>
          </syntax>
          <access>readonly</access>
          <description>
              The value of sysUpTime on the most recent occasion at which
              any one or more of this interface's counters suffered a
              discontinuity.  The relevant counters are the specific
              instances associated with this interface of any Counter32 or
              
              
              Counter64 object contained in the ifTable or ifXTable.  If
              no such discontinuities have occurred since the last re-
              initialization of the local management subsystem, then this
              object contains a zero value.
          </description>
        </column>
      </row>
    </table>
    <table name="ifStackTable" oid="1.3.6.1.2.1.31.1.2" status="current">
      <description>
          The table containing information on the relationships
          between the multiple sub-layers of network interfaces.  In
          particular, it contains information on which sub-layers run
          'on top of' which other sub-layers, where each sub-layer
          corresponds to a conceptual row in the ifTable.  For
          example, when the sub-layer with ifIndex value x runs over
          the sub-layer with ifIndex value y, then this table
          contains:
          
            ifStackStatus.x.y=active
          
          For each ifIndex value, I, which identifies an active
          interface, there are always at least two instantiated rows
          in this table associated with I.  For one of these rows, I
          is the value of ifStackHigherLayer; for the other, I is the
          value of ifStackLowerLayer.  (If I is not involved in
          multiplexing, then these are the only two rows associated
          with I.)
          
          For example, two rows exist even for an interface which has
          no others stacked on top or below it:
          
            ifStackStatus.0.x=active
            ifStackStatus.x.0=active 
      </description>
      <row name="ifStackEntry" oid="1.3.6.1.2.1.31.1.2.1" create="true" status="current">
        <linkage>
          <index module="IF-MIB" name="ifStackHigherLayer"/>
          <index module="IF-MIB" name="ifStackLowerLayer"/>
        </linkage>
        <description>
            Information on a particular relationship between two sub-
            layers, specifying that one sub-layer runs on 'top' of the
            other sub-layer.  Each sub-layer corresponds to a conceptual
            row in the ifTable.
        </description>
        <column name="ifStackHigherLayer" oid="1.3.6.1.2.1.31.1.2.1.1" status="current">
          <syntax>
            <type module="IF-MIB" name="InterfaceIndexOrZero"/>
          </syntax>
          <access>noaccess</access>
          <description>
              The value of ifIndex corresponding to the higher sub-layer
              of the relationship, i.e., the sub-layer which runs on 'top'
              of the sub-layer identified by the corresponding instance of
              ifStackLowerLayer.  If there is no higher sub-layer (below
              the internetwork layer), then this object has the value 0.
          </description>
        </column>
        <column name="ifStackLowerLayer" oid="1.3.6.1.2.1.31.1.2.1.2" status="current">
          <syntax>
            <type module="IF-MIB" name="InterfaceIndexOrZero"/>
          </syntax>
          <access>noaccess</access>
          <description>
              The value of ifIndex corresponding to the lower sub-layer
              of the relationship, i.e., the sub-layer which runs 'below'
              the sub-layer identified by the corresponding instance of
              ifStackHigherLayer.  If there is no lower sub-layer, then
              this object has the value 0.
          </description>
        </column>
        <column name="ifStackStatus" oid="1.3.6.1.2.1.31.1.2.1.3" status="current">
          <syntax>
            <type module="SNMPv2-TC" name="RowStatus"/>
          </syntax>
          <access>readwrite</access>
          <description>
              The status of the relationship between two sub-layers.
              
              Changing the value of this object from 'active' to
              'notInService' or 'destroy' will likely have consequences up
              and down the interface stack.  Thus, write access to this
              object is likely to be inappropriate for some types of
              interfaces, and many implementations will choose not to
              support write-access for any type of interface.
          </description>
        </column>
      </row>
    </table>
    <table name="ifTestTable" oid="1.3.6.1.2.1.31.1.3" status="deprecated">
      <description>
          This table contains one entry per interface.  It defines
          objects which allow a network manager to instruct an agent
          to test an interface for various faults.  Tests for an
          interface are defined in the media-specific MIB for that
          interface.  After invoking a test, the object ifTestResult
          can be read to determine the outcome.  If an agent can not
          perform the test, ifTestResult is set to so indicate.  The
          object ifTestCode can be used to provide further test-
          specific or interface-specific (or even enterprise-specific)
          information concerning the outcome of the test.  Only one
          test can be in progress on each interface at any one time.
          If one test is in progress when another test is invoked, the
          second test is rejected.  Some agents may reject a test when
          a prior test is active on another interface.
          
          Before starting a test, a manager-station must first obtain
          'ownership' of the entry in the ifTestTable for the
          interface to be tested.  This is accomplished with the
          ifTestId and ifTestStatus objects as follows:
          
          try_again:
            get (ifTestId, ifTestStatus)
            while (ifTestStatus != notInUse)
                /*
                 * Loop while a test is running or some other
                 * manager is configuring a test.
                 */
                short delay
                get (ifTestId, ifTestStatus)
            }
          
            /*
             * Is not being used right now -- let's compete
             * to see who gets it.
             */
            lock_value = ifTestId
          
            if ( set(ifTestId = lock_value, ifTestStatus = inUse,
          
          
                     ifTestOwner = 'my-IP-address') == FAILURE)
                /*
                 * Another manager got the ifTestEntry -- go
                 * try again
                 */
                goto try_again;
          
            /*
             * I have the lock
             */
            set up any test parameters.
          
            /*
             * This starts the test
             */
            set(ifTestType = test_to_run);
          
            wait for test completion by polling ifTestResult
          
            when test completes, agent sets ifTestResult
                 agent also sets ifTestStatus = 'notInUse'
          
            retrieve any additional test results, and ifTestId
          
            if (ifTestId == lock_value+1) results are valid
          
          A manager station first retrieves the value of the
          appropriate ifTestId and ifTestStatus objects, periodically
          repeating the retrieval if necessary, until the value of
          ifTestStatus is 'notInUse'.  The manager station then tries
          to set the same ifTestId object to the value it just
          retrieved, the same ifTestStatus object to 'inUse', and the
          corresponding ifTestOwner object to a value indicating
          itself.  If the set operation succeeds then the manager has
          obtained ownership of the ifTestEntry, and the value of the
          ifTestId object is incremented by the agent (per the
          semantics of TestAndIncr).  Failure of the set operation
          indicates that some other manager has obtained ownership of
          the ifTestEntry.
          
          Once ownership is obtained, any test parameters can be
          setup, and then the test is initiated by setting ifTestType.
          On completion of the test, the agent sets ifTestStatus to
          'notInUse'.  Once this occurs, the manager can retrieve the
          results.  In the (rare) event that the invocation of tests
          by two network managers were to overlap, then there would be
          a possibility that the first test's results might be
          overwritten by the second test's results prior to the first
          
          
          results being read.  This unlikely circumstance can be
          detected by a network manager retrieving ifTestId at the
          same time as retrieving the test results, and ensuring that
          the results are for the desired request.
          
          If ifTestType is not set within an abnormally long period of
          time after ownership is obtained, the agent should time-out
          the manager, and reset the value of the ifTestStatus object
          back to 'notInUse'.  It is suggested that this time-out
          period be 5 minutes.
          
          In general, a management station must not retransmit a
          request to invoke a test for which it does not receive a
          response; instead, it properly inspects an agent's MIB to
          determine if the invocation was successful.  Only if the
          invocation was unsuccessful, is the invocation request
          retransmitted.
          
          Some tests may require the interface to be taken off-line in
          order to execute them, or may even require the agent to
          reboot after completion of the test.  In these
          circumstances, communication with the management station
          invoking the test may be lost until after completion of the
          test.  An agent is not required to support such tests.
          However, if such tests are supported, then the agent should
          make every effort to transmit a response to the request
          which invoked the test prior to losing communication.  When
          the agent is restored to normal service, the results of the
          test are properly made available in the appropriate objects.
          Note that this requires that the ifIndex value assigned to
          an interface must be unchanged even if the test causes a
          reboot.  An agent must reject any test for which it cannot,
          perhaps due to resource constraints, make available at least
          the minimum amount of information after that test
          completes.
      </description>
      <row name="ifTestEntry" oid="1.3.6.1.2.1.31.1.3.1" status="deprecated">
        <linkage>
          <augments module="IF-MIB" name="ifEntry"/>
        </linkage>
        <description>
            An entry containing objects for invoking tests on an
            interface.
        </description>
        <column name="ifTestId" oid="1.3.6.1.2.1.31.1.3.1.1" status="deprecated">
          <syntax>
            <type module="SNMPv2-TC" name="TestAndIncr"/>
          </syntax>
          <access>readwrite</access>
          <description>
              This object identifies the current invocation of the
              interface's test.
          </description>
        </column>
        <column name="ifTestStatus" oid="1.3.6.1.2.1.31.1.3.1.2" status="deprecated">
          <syntax>
            <typedef basetype="Enumeration">
              <namednumber name="notInUse" number="1"/>
              <namednumber name="inUse" number="2"/>
            </typedef>
          </syntax>
          <access>readwrite</access>
          <description>
              This object indicates whether or not some manager currently
              has the necessary 'ownership' required to invoke a test on
              this interface.  A write to this object is only successful
              when it changes its value from 'notInUse(1)' to 'inUse(2)'.
              After completion of a test, the agent resets the value back
              to 'notInUse(1)'.
          </description>
        </column>
        <column name="ifTestType" oid="1.3.6.1.2.1.31.1.3.1.3" status="deprecated">
          <syntax>
            <type module="SNMPv2-TC" name="AutonomousType"/>
          </syntax>
          <access>readwrite</access>
          <description>
              A control variable used to start and stop operator-
              initiated interface tests.  Most OBJECT IDENTIFIER values
              assigned to tests are defined elsewhere, in association with
              specific types of interface.  However, this document assigns
              a value for a full-duplex loopback test, and defines the
              special meanings of the subject identifier:
              
                  noTest  OBJECT IDENTIFIER ::= { 0 0 }
              
              When the value noTest is written to this object, no action
              is taken unless a test is in progress, in which case the
              test is aborted.  Writing any other value to this object is
              
              
              only valid when no test is currently in progress, in which
              case the indicated test is initiated.
              
              When read, this object always returns the most recent value
              that ifTestType was set to.  If it has not been set since
              the last initialization of the network management subsystem
              on the agent, a value of noTest is returned.
          </description>
        </column>
        <column name="ifTestResult" oid="1.3.6.1.2.1.31.1.3.1.4" status="deprecated">
          <syntax>
            <typedef basetype="Enumeration">
              <namednumber name="none" number="1"/>
              <namednumber name="success" number="2"/>
              <namednumber name="inProgress" number="3"/>
              <namednumber name="notSupported" number="4"/>
              <namednumber name="unAbleToRun" number="5"/>
              <namednumber name="aborted" number="6"/>
              <namednumber name="failed" number="7"/>
            </typedef>
          </syntax>
          <access>readonly</access>
          <description>
              This object contains the result of the most recently
              requested test, or the value none(1) if no tests have been
              requested since the last reset.  Note that this facility
              provides no provision for saving the results of one test
              when starting another, as could be required if used by
              multiple managers concurrently.
          </description>
        </column>
        <column name="ifTestCode" oid="1.3.6.1.2.1.31.1.3.1.5" status="deprecated">
          <syntax>
            <type module="" name="ObjectIdentifier"/>
          </syntax>
          <access>readonly</access>
          <description>
              This object contains a code which contains more specific
              information on the test result, for example an error-code
              after a failed test.  Error codes and other values this
              object may take are specific to the type of interface and/or
              test.  The value may have the semantics of either the
              AutonomousType or InstancePointer textual conventions as
              defined in RFC 2579.  The identifier:
              
                  testCodeUnknown  OBJECT IDENTIFIER ::= { 0 0 }
              
              is defined for use if no additional result code is
              available.
          </description>
        </column>
        <column name="ifTestOwner" oid="1.3.6.1.2.1.31.1.3.1.6" status="deprecated">
          <syntax>
            <type module="IF-MIB" name="OwnerString"/>
          </syntax>
          <access>readwrite</access>
          <description>
              The entity which currently has the 'ownership' required to
              invoke a test on this interface.
          </description>
        </column>
      </row>
    </table>
    <table name="ifRcvAddressTable" oid="1.3.6.1.2.1.31.1.4" status="current">
      <description>
          This table contains an entry for each address (broadcast,
          multicast, or uni-cast) for which the system will receive
          packets/frames on a particular interface, except as follows:
          
          - for an interface operating in promiscuous mode, entries
          are only required for those addresses for which the system
          would receive frames were it not operating in promiscuous
          mode.
          
          
          - for 802.5 functional addresses, only one entry is
          required, for the address which has the functional address
          bit ANDed with the bit mask of all functional addresses for
          which the interface will accept frames.
          
          A system is normally able to use any unicast address which
          corresponds to an entry in this table as a source address.
      </description>
      <row name="ifRcvAddressEntry" oid="1.3.6.1.2.1.31.1.4.1" create="true" status="current">
        <linkage>
          <index module="IF-MIB" name="ifIndex"/>
          <index module="IF-MIB" name="ifRcvAddressAddress"/>
        </linkage>
        <description>
            A list of objects identifying an address for which the
            system will accept packets/frames on the particular
            interface identified by the index value ifIndex.
        </description>
        <column name="ifRcvAddressAddress" oid="1.3.6.1.2.1.31.1.4.1.1" status="current">
          <syntax>
            <type module="SNMPv2-TC" name="PhysAddress"/>
          </syntax>
          <access>noaccess</access>
          <description>
              An address for which the system will accept packets/frames
              on this entry's interface.
          </description>
        </column>
        <column name="ifRcvAddressStatus" oid="1.3.6.1.2.1.31.1.4.1.2" status="current">
          <syntax>
            <type module="SNMPv2-TC" name="RowStatus"/>
          </syntax>
          <access>readwrite</access>
          <description>
              This object is used to create and delete rows in the
              ifRcvAddressTable.
          </description>
        </column>
        <column name="ifRcvAddressType" oid="1.3.6.1.2.1.31.1.4.1.3" status="current">
          <syntax>
            <typedef basetype="Enumeration">
              <namednumber name="other" number="1"/>
              <namednumber name="volatile" number="2"/>
              <namednumber name="nonVolatile" number="3"/>
            </typedef>
          </syntax>
          <access>readwrite</access>
          <default>volatile</default>
          <description>
              This object has the value nonVolatile(3) for those entries
              in the table which are valid and will not be deleted by the
              next restart of the managed system.  Entries having the
              value volatile(2) are valid and exist, but have not been
              saved, so that will not exist after the next restart of the
              managed system.  Entries having the value other(1) are valid
              and exist but are not classified as to whether they will
              continue to exist after the next restart.
          </description>
        </column>
      </row>
    </table>
    <scalar name="ifTableLastChange" oid="1.3.6.1.2.1.31.1.5" status="current">
      <syntax>
        <type module="SNMPv2-SMI" name="TimeTicks"/>
      </syntax>
      <access>readonly</access>
      <description>
          The value of sysUpTime at the time of the last creation or
          deletion of an entry in the ifTable.  If the number of
          entries has been unchanged since the last re-initialization
          of the local network management subsystem, then this object
          contains a zero value.
      </description>
    </scalar>
    <scalar name="ifStackLastChange" oid="1.3.6.1.2.1.31.1.6" status="current">
      <syntax>
        <type module="SNMPv2-SMI" name="TimeTicks"/>
      </syntax>
      <access>readonly</access>
      <description>
          The value of sysUpTime at the time of the last change of
          the (whole) interface stack.  A change of the interface
          stack is defined to be any creation, deletion, or change in
          value of any instance of ifStackStatus.  If the interface
          stack has been unchanged since the last re-initialization of
          the local network management subsystem, then this object
          contains a zero value.
      </description>
    </scalar>
    <node name="ifConformance" oid="1.3.6.1.2.1.31.2">
    </node>
    <node name="ifGroups" oid="1.3.6.1.2.1.31.2.1">
    </node>
    <node name="ifCompliances" oid="1.3.6.1.2.1.31.2.2">
    </node>
  </nodes>

  <notifications>
    <notification name="linkDown" oid="1.3.6.1.6.3.1.1.5.3" status="current">
      <objects>
        <object module="IF-MIB" name="ifIndex"/>
        <object module="IF-MIB" name="ifAdminStatus"/>
        <object module="IF-MIB" name="ifOperStatus"/>
      </objects>
      <description>
          A linkDown trap signifies that the SNMP entity, acting in
          an agent role, has detected that the ifOperStatus object for
          one of its communication links is about to enter the down
          state from some other state (but not from the notPresent
          state).  This other state is indicated by the included value
          of ifOperStatus.
      </description>
    </notification>
    <notification name="linkUp" oid="1.3.6.1.6.3.1.1.5.4" status="current">
      <objects>
        <object module="IF-MIB" name="ifIndex"/>
        <object module="IF-MIB" name="ifAdminStatus"/>
        <object module="IF-MIB" name="ifOperStatus"/>
      </objects>
      <description>
          A linkUp trap signifies that the SNMP entity, acting in an
          agent role, has detected that the ifOperStatus object for
          one of its communication links left the down state and
          transitioned into some other state (but not into the
          notPresent state).  This other state is indicated by the
          included value of ifOperStatus.
      </description>
    </notification>
  </notifications>

  <groups>
    <group name="ifGeneralGroup" oid="1.3.6.1.2.1.31.2.1.1" status="deprecated">
      <members>
        <member module="IF-MIB" name="ifDescr"/>
        <member module="IF-MIB" name="ifType"/>
        <member module="IF-MIB" name="ifSpeed"/>
        <member module="IF-MIB" name="ifPhysAddress"/>
        <member module="IF-MIB" name="ifAdminStatus"/>
        <member module="IF-MIB" name="ifOperStatus"/>
        <member module="IF-MIB" name="ifLastChange"/>
        <member module="IF-MIB" name="ifLinkUpDownTrapEnable"/>
        <member module="IF-MIB" name="ifConnectorPresent"/>
        <member module="IF-MIB" name="ifHighSpeed"/>
        <member module="IF-MIB" name="ifName"/>
      </members>
      <description>
          A collection of objects deprecated in favour of
          ifGeneralInformationGroup.
      </description>
    </group>
    <group name="ifFixedLengthGroup" oid="1.3.6.1.2.1.31.2.1.2" status="current">
      <members>
        <member module="IF-MIB" name="ifInOctets"/>
        <member module="IF-MIB" name="ifOutOctets"/>
        <member module="IF-MIB" name="ifInUnknownProtos"/>
        <member module="IF-MIB" name="ifInErrors"/>
        <member module="IF-MIB" name="ifOutErrors"/>
      </members>
      <description>
          A collection of objects providing information specific to
          non-high speed (non-high speed interfaces transmit and
          receive at speeds less than or equal to 20,000,000
          bits/second) character-oriented or fixed-length-transmission
          network interfaces.
      </description>
    </group>
    <group name="ifHCFixedLengthGroup" oid="1.3.6.1.2.1.31.2.1.3" status="current">
      <members>
        <member module="IF-MIB" name="ifHCInOctets"/>
        <member module="IF-MIB" name="ifHCOutOctets"/>
        <member module="IF-MIB" name="ifInOctets"/>
        <member module="IF-MIB" name="ifOutOctets"/>
        <member module="IF-MIB" name="ifInUnknownProtos"/>
        <member module="IF-MIB" name="ifInErrors"/>
        <member module="IF-MIB" name="ifOutErrors"/>
      </members>
      <description>
          A collection of objects providing information specific to
          high speed (greater than 20,000,000 bits/second) character-
          oriented or fixed-length-transmission network interfaces.
      </description>
    </group>
    <group name="ifPacketGroup" oid="1.3.6.1.2.1.31.2.1.4" status="current">
      <members>
        <member module="IF-MIB" name="ifInOctets"/>
        <member module="IF-MIB" name="ifOutOctets"/>
        <member module="IF-MIB" name="ifInUnknownProtos"/>
        <member module="IF-MIB" name="ifInErrors"/>
        <member module="IF-MIB" name="ifOutErrors"/>
        <member module="IF-MIB" name="ifMtu"/>
        <member module="IF-MIB" name="ifInUcastPkts"/>
        <member module="IF-MIB" name="ifInMulticastPkts"/>
        <member module="IF-MIB" name="ifInBroadcastPkts"/>
        <member module="IF-MIB" name="ifInDiscards"/>
        <member module="IF-MIB" name="ifOutUcastPkts"/>
        <member module="IF-MIB" name="ifOutMulticastPkts"/>
        <member module="IF-MIB" name="ifOutBroadcastPkts"/>
        <member module="IF-MIB" name="ifOutDiscards"/>
        <member module="IF-MIB" name="ifPromiscuousMode"/>
      </members>
      <description>
          A collection of objects providing information specific to
          non-high speed (non-high speed interfaces transmit and
          receive at speeds less than or equal to 20,000,000
          bits/second) packet-oriented network interfaces.
      </description>
    </group>
    <group name="ifHCPacketGroup" oid="1.3.6.1.2.1.31.2.1.5" status="current">
      <members>
        <member module="IF-MIB" name="ifHCInOctets"/>
        <member module="IF-MIB" name="ifHCOutOctets"/>
        <member module="IF-MIB" name="ifInOctets"/>
        <member module="IF-MIB" name="ifOutOctets"/>
        <member module="IF-MIB" name="ifInUnknownProtos"/>
        <member module="IF-MIB" name="ifInErrors"/>
        <member module="IF-MIB" name="ifOutErrors"/>
        <member module="IF-MIB" name="ifMtu"/>
        <member module="IF-MIB" name="ifInUcastPkts"/>
        <member module="IF-MIB" name="ifInMulticastPkts"/>
        <member module="IF-MIB" name="ifInBroadcastPkts"/>
        <member module="IF-MIB" name="ifInDiscards"/>
        <member module="IF-MIB" name="ifOutUcastPkts"/>
        <member module="IF-MIB" name="ifOutMulticastPkts"/>
        <member module="IF-MIB" name="ifOutBroadcastPkts"/>
        <member module="IF-MIB" name="ifOutDiscards"/>
        <member module="IF-MIB" name="ifPromiscuousMode"/>
      </members>
      <description>
          A collection of objects providing information specific to
          high speed (greater than 20,000,000 bits/second but less
          than or equal to 650,000,000 bits/second) packet-oriented
          network interfaces.
      </description>
    </group>
    <group name="ifVHCPacketGroup" oid="1.3.6.1.2.1.31.2.1.6" status="current">
      <members>
        <member module="IF-MIB" name="ifHCInUcastPkts"/>
        <member module="IF-MIB" name="ifHCInMulticastPkts"/>
        <member module="IF-MIB" name="ifHCInBroadcastPkts"/>
        <member module="IF-MIB" name="ifHCOutUcastPkts"/>
        <member module="IF-MIB" name="ifHCOutMulticastPkts"/>
        <member module="IF-MIB" name="ifHCOutBroadcastPkts"/>
        <member module="IF-MIB" name="ifHCInOctets"/>
        <member module="IF-MIB" name="ifHCOutOctets"/>
        <member module="IF-MIB" name="ifInOctets"/>
        <member module="IF-MIB" name="ifOutOctets"/>
        <member module="IF-MIB" name="ifInUnknownProtos"/>
        <member module="IF-MIB" name="ifInErrors"/>
        <member module="IF-MIB" name="ifOutErrors"/>
        <member module="IF-MIB" name="ifMtu"/>
        <member module="IF-MIB" name="ifInUcastPkts"/>
        <member module="IF-MIB" name="ifInMulticastPkts"/>
        <member module="IF-MIB" name="ifInBroadcastPkts"/>
        <member module="IF-MIB" name="ifInDiscards"/>
        <member module="IF-MIB" name="ifOutUcastPkts"/>
        <member module="IF-MIB" name="ifOutMulticastPkts"/>
        <member module="IF-MIB" name="ifOutBroadcastPkts"/>
        <member module="IF-MIB" name="ifOutDiscards"/>
        <member module="IF-MIB" name="ifPromiscuousMode"/>
      </members>
      <description>
          A collection of objects providing information specific to
          higher speed (greater than 650,000,000 bits/second) packet-
          oriented network interfaces.
      </description>
    </group>
    <group name="ifRcvAddressGroup" oid="1.3.6.1.2.1.31.2.1.7" status="current">
      <members>
        <member module="IF-MIB" name="ifRcvAddressStatus"/>
        <member module="IF-MIB" name="ifRcvAddressType"/>
      </members>
      <description>
          A collection of objects providing information on the
          multiple addresses which an interface receives.
      </description>
    </group>
    <group name="ifTestGroup" oid="1.3.6.1.2.1.31.2.1.8" status="deprecated">
      <members>
        <member module="IF-MIB" name="ifTestId"/>
        <member module="IF-MIB" name="ifTestStatus"/>
        <member module="IF-MIB" name="ifTestType"/>
        <member module="IF-MIB" name="ifTestResult"/>
        <member module="IF-MIB" name="ifTestCode"/>
        <member module="IF-MIB" name="ifTestOwner"/>
      </members>
      <description>
          A collection of objects providing the ability to invoke
          tests on an interface.
      </description>
    </group>
    <group name="ifStackGroup" oid="1.3.6.1.2.1.31.2.1.9" status="deprecated">
      <members>
        <member module="IF-MIB" name="ifStackStatus"/>
      </members>
      <description>
          The previous collection of objects providing information on
          the layering of MIB-II interfaces.
      </description>
    </group>
    <group name="ifGeneralInformationGroup" oid="1.3.6.1.2.1.31.2.1.10" status="current">
      <members>
        <member module="IF-MIB" name="ifIndex"/>
        <member module="IF-MIB" name="ifDescr"/>
        <member module="IF-MIB" name="ifType"/>
        <member module="IF-MIB" name="ifSpeed"/>
        <member module="IF-MIB" name="ifPhysAddress"/>
        <member module="IF-MIB" name="ifAdminStatus"/>
        <member module="IF-MIB" name="ifOperStatus"/>
        <member module="IF-MIB" name="ifLastChange"/>
        <member module="IF-MIB" name="ifLinkUpDownTrapEnable"/>
        <member module="IF-MIB" name="ifConnectorPresent"/>
        <member module="IF-MIB" name="ifHighSpeed"/>
        <member module="IF-MIB" name="ifName"/>
        <member module="IF-MIB" name="ifNumber"/>
        <member module="IF-MIB" name="ifAlias"/>
        <member module="IF-MIB" name="ifTableLastChange"/>
      </members>
      <description>
          A collection of objects providing information applicable to
          all network interfaces.
      </description>
    </group>
    <group name="ifStackGroup2" oid="1.3.6.1.2.1.31.2.1.11" status="current">
      <members>
        <member module="IF-MIB" name="ifStackStatus"/>
        <member module="IF-MIB" name="ifStackLastChange"/>
      </members>
      <description>
          A collection of objects providing information on the
          layering of MIB-II interfaces.
      </description>
    </group>
    <group name="ifOldObjectsGroup" oid="1.3.6.1.2.1.31.2.1.12" status="deprecated">
      <members>
        <member module="IF-MIB" name="ifInNUcastPkts"/>
        <member module="IF-MIB" name="ifOutNUcastPkts"/>
        <member module="IF-MIB" name="ifOutQLen"/>
        <member module="IF-MIB" name="ifSpecific"/>
      </members>
      <description>
          The collection of objects deprecated from the original MIB-
          II interfaces group.
      </description>
    </group>
    <group name="ifCounterDiscontinuityGroup" oid="1.3.6.1.2.1.31.2.1.13" status="current">
      <members>
        <member module="IF-MIB" name="ifCounterDiscontinuityTime"/>
      </members>
      <description>
          A collection of objects providing information specific to
          interface counter discontinuities.
      </description>
    </group>
    <group name="linkUpDownNotificationsGroup" oid="1.3.6.1.2.1.31.2.1.14" status="current">
      <members>
        <member module="IF-MIB" name="linkUp"/>
        <member module="IF-MIB" name="linkDown"/>
      </members>
      <description>
          The notifications which indicate specific changes in the
          value of ifOperStatus.
      </description>
    </group>
  </groups>

  <compliances>
    <compliance name="ifCompliance" oid="1.3.6.1.2.1.31.2.2.1" status="deprecated">
      <description>
          A compliance statement defined in a previous version of
          this MIB module, for SNMP entities which have network
          interfaces.
      </description>
      <requires>
        <mandatory module="IF-MIB" name="ifGeneralGroup"/>
        <mandatory module="IF-MIB" name="ifStackGroup"/>
        <option module="IF-MIB" name="ifFixedLengthGroup">
          <description>
              This group is mandatory for all network interfaces which
              are character-oriented or transmit data in fixed-length
              transmission units.
          </description>
        </option>
        <option module="IF-MIB" name="ifHCFixedLengthGroup">
          <description>
              This group is mandatory only for those network interfaces
              which are character-oriented or transmit data in fixed-
              length transmission units, and for which the value of the
              corresponding instance of ifSpeed is greater than 20,000,000
              bits/second.
          </description>
        </option>
        <option module="IF-MIB" name="ifPacketGroup">
          <description>
              This group is mandatory for all network interfaces which
              are packet-oriented.
          </description>
        </option>
        <option module="IF-MIB" name="ifHCPacketGroup">
          <description>
              This group is mandatory only for those network interfaces
              which are packet-oriented and for which the value of the
              corresponding instance of ifSpeed is greater than
              650,000,000 bits/second.
          </description>
        </option>
        <option module="IF-MIB" name="ifTestGroup">
          <description>
              This group is optional.  Media-specific MIBs which require
              interface tests are strongly encouraged to use this group
              for invoking tests and reporting results.  A medium specific
              MIB which has mandatory tests may make implementation of
              
              
              this group mandatory.
          </description>
        </option>
        <option module="IF-MIB" name="ifRcvAddressGroup">
          <description>
              The applicability of this group MUST be defined by the
              media-specific MIBs.  Media-specific MIBs must define the
              exact meaning, use, and semantics of the addresses in this
              group.
          </description>
        </option>
      </requires>
      <refinements>
        <refinement module="IF-MIB" name="ifLinkUpDownTrapEnable">
          <access>readonly</access>
          <description>
              Write access is not required.
          </description>
        </refinement>
        <refinement module="IF-MIB" name="ifPromiscuousMode">
          <access>readonly</access>
          <description>
              Write access is not required.
          </description>
        </refinement>
        <refinement module="IF-MIB" name="ifStackStatus">
          <syntax>
            <typedef basetype="Enumeration">
              <parent module="SNMPv2-TC" name="RowStatus"/>
              <namednumber name="active" number="1"/>
            </typedef>
          </syntax>
          <access>readonly</access>
          <description>
              Write access is not required, and only one of the six
              enumerated values for the RowStatus textual convention need
              be supported, specifically: active(1).
          </description>
        </refinement>
        <refinement module="IF-MIB" name="ifAdminStatus">
          <syntax>
            <typedef basetype="Enumeration">
              <namednumber name="up" number="1"/>
              <namednumber name="down" number="2"/>
            </typedef>
          </syntax>
          <access>readonly</access>
          <description>
              Write access is not required, nor is support for the value
              testing(3).
          </description>
        </refinement>
      </refinements>

    </compliance>
    <compliance name="ifCompliance2" oid="1.3.6.1.2.1.31.2.2.2" status="deprecated">
      <description>
          A compliance statement defined in a previous version of
          this MIB module, for SNMP entities which have network
          interfaces.
      </description>
      <requires>
        <mandatory module="IF-MIB" name="ifGeneralInformationGroup"/>
        <mandatory module="IF-MIB" name="ifStackGroup2"/>
        <mandatory module="IF-MIB" name="ifCounterDiscontinuityGroup"/>
        <option module="IF-MIB" name="ifFixedLengthGroup">
          <description>
              This group is mandatory for all network interfaces which
              are character-oriented or transmit data in fixed-length
              transmission units.
          </description>
        </option>
        <option module="IF-MIB" name="ifHCFixedLengthGroup">
          <description>
              This group is mandatory only for those network interfaces
              which are character-oriented or transmit data in fixed-
              length transmission units, and for which the value of the
              corresponding instance of ifSpeed is greater than 20,000,000
              bits/second.
          </description>
        </option>
        <option module="IF-MIB" name="ifPacketGroup">
          <description>
              This group is mandatory for all network interfaces which
              are packet-oriented.
          </description>
        </option>
        <option module="IF-MIB" name="ifHCPacketGroup">
          <description>
              This group is mandatory only for those network interfaces
              which are packet-oriented and for which the value of the
              corresponding instance of ifSpeed is greater than
              650,000,000 bits/second.
          </description>
        </option>
        <option module="IF-MIB" name="ifRcvAddressGroup">
          <description>
              The applicability of this group MUST be defined by the
              media-specific MIBs.  Media-specific MIBs must define the
              exact meaning, use, and semantics of the addresses in this
              group.
          </description>
        </option>
      </requires>
      <refinements>
        <refinement module="IF-MIB" name="ifLinkUpDownTrapEnable">
          <access>readonly</access>
          <description>
              Write access is not required.
          </description>
        </refinement>
        <refinement module="IF-MIB" name="ifPromiscuousMode">
          <access>readonly</access>
          <description>
              Write access is not required.
          </description>
        </refinement>
        <refinement module="IF-MIB" name="ifStackStatus">
          <syntax>
            <typedef basetype="Enumeration">
              <parent module="SNMPv2-TC" name="RowStatus"/>
              <namednumber name="active" number="1"/>
            </typedef>
          </syntax>
          <access>readonly</access>
          <description>
              Write access is not required, and only one of the six
              enumerated values for the RowStatus textual convention need
              be supported, specifically: active(1).
          </description>
        </refinement>
        <refinement module="IF-MIB" name="ifAdminStatus">
          <syntax>
            <typedef basetype="Enumeration">
              <namednumber name="up" number="1"/>
              <namednumber name="down" number="2"/>
            </typedef>
          </syntax>
          <access>readonly</access>
          <description>
              Write access is not required, nor is support for the value
              testing(3).
          </description>
        </refinement>
        <refinement module="IF-MIB" name="ifAlias">
          <access>readonly</access>
          <description>
              Write access is not required.
          </description>
        </refinement>
      </refinements>

    </compliance>
    <compliance name="ifCompliance3" oid="1.3.6.1.2.1.31.2.2.3" status="current">
      <description>
          The compliance statement for SNMP entities which have
          network interfaces.
      </description>
      <requires>
        <mandatory module="IF-MIB" name="ifGeneralInformationGroup"/>
        <mandatory module="IF-MIB" name="linkUpDownNotificationsGroup"/>
        <option module="IF-MIB" name="ifFixedLengthGroup">
          <description>
              This group is mandatory for those network interfaces which
              are character-oriented or transmit data in fixed-length
              transmission units, and for which the value of the
              corresponding instance of ifSpeed is less than or equal to
              20,000,000 bits/second.
          </description>
        </option>
        <option module="IF-MIB" name="ifHCFixedLengthGroup">
          <description>
              This group is mandatory for those network interfaces which
              are character-oriented or transmit data in fixed-length
              transmission units, and for which the value of the
              corresponding instance of ifSpeed is greater than 20,000,000
              bits/second.
          </description>
        </option>
        <option module="IF-MIB" name="ifPacketGroup">
          <description>
              This group is mandatory for those network interfaces which
              are packet-oriented, and for which the value of the
              corresponding instance of ifSpeed is less than or equal to
              20,000,000 bits/second.
          </description>
        </option>
        <option module="IF-MIB" name="ifHCPacketGroup">
          <description>
              This group is mandatory only for those network interfaces
              which are packet-oriented and for which the value of the
              corresponding instance of ifSpeed is greater than 20,000,000
              bits/second but less than or equal to 650,000,000
              bits/second.
          </description>
        </option>
        <option module="IF-MIB" name="ifVHCPacketGroup">
          <description>
              This group is mandatory only for those network interfaces
              which are packet-oriented and for which the value of the
              corresponding instance of ifSpeed is greater than
              650,000,000 bits/second.
          </description>
        </option>
        <option module="IF-MIB" name="ifCounterDiscontinuityGroup">
          <description>
              This group is mandatory for those network interfaces that
              are required to maintain counters (i.e., those for which one
              of the ifFixedLengthGroup, ifHCFixedLengthGroup,
              ifPacketGroup, ifHCPacketGroup, or ifVHCPacketGroup is
              mandatory).
          </description>
        </option>
        <option module="IF-MIB" name="ifRcvAddressGroup">
          <description>
              The applicability of this group MUST be defined by the
              media-specific MIBs.  Media-specific MIBs must define the
              exact meaning, use, and semantics of the addresses in this
              group.
          </description>
        </option>
      </requires>
      <refinements>
        <refinement module="IF-MIB" name="ifLinkUpDownTrapEnable">
          <access>readonly</access>
          <description>
              Write access is not required.
          </description>
        </refinement>
        <refinement module="IF-MIB" name="ifPromiscuousMode">
          <access>readonly</access>
          <description>
              Write access is not required.
          </description>
        </refinement>
        <refinement module="IF-MIB" name="ifAdminStatus">
          <syntax>
            <typedef basetype="Enumeration">
              <namednumber name="up" number="1"/>
              <namednumber name="down" number="2"/>
            </typedef>
          </syntax>
          <access>readonly</access>
          <description>
              Write access is not required, nor is support for the value
              testing(3).
          </description>
        </refinement>
        <refinement module="IF-MIB" name="ifAlias">
          <access>readonly</access>
          <description>
              Write access is not required.
          </description>
        </refinement>
      </refinements>

    </compliance>
  </compliances>

</smi>
