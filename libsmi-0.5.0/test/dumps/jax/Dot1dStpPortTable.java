/*
 * This Java file has been generated by smidump 0.5.0. Do not edit!
 * It is intended to be used within a Java AgentX sub-agent environment.
 *
 * $Id$
 */

/**
    This class represents a Java AgentX (JAX) implementation of
    the table dot1dStpPortTable defined in BRIDGE-MIB.

    @version 1
    @author  smidump 0.5.0
    @see     AgentXTable
 */

import java.util.Vector;

import jax.AgentXOID;
import jax.AgentXVarBind;
import jax.AgentXResponsePDU;
import jax.AgentXSetPhase;
import jax.AgentXTable;
import jax.AgentXEntry;

public class Dot1dStpPortTable extends AgentXTable
{

    // entry OID
    private final static long[] OID = {1, 3, 6, 1, 2, 1, 17, 2, 15, 1};

    // constructors
    public Dot1dStpPortTable()
    {
        oid = new AgentXOID(OID);

        // register implemented columns
        columns.addElement(new Long(1));
        columns.addElement(new Long(2));
        columns.addElement(new Long(3));
        columns.addElement(new Long(4));
        columns.addElement(new Long(5));
        columns.addElement(new Long(6));
        columns.addElement(new Long(7));
        columns.addElement(new Long(8));
        columns.addElement(new Long(9));
        columns.addElement(new Long(10));
        columns.addElement(new Long(11));
    }

    public Dot1dStpPortTable(boolean shared)
    {
        super(shared);

        oid = new AgentXOID(OID);

        // register implemented columns
        columns.addElement(new Long(1));
        columns.addElement(new Long(2));
        columns.addElement(new Long(3));
        columns.addElement(new Long(4));
        columns.addElement(new Long(5));
        columns.addElement(new Long(6));
        columns.addElement(new Long(7));
        columns.addElement(new Long(8));
        columns.addElement(new Long(9));
        columns.addElement(new Long(10));
        columns.addElement(new Long(11));
    }

    public AgentXVarBind getVarBind(AgentXEntry entry, long column)
    {
        AgentXOID oid = new AgentXOID(getOID(), column, entry.getInstance());

        switch ((int)column) {
        case 1: // dot1dStpPort
        {
            int value = ((Dot1dStpPortEntry)entry).get_dot1dStpPort();
            return new AgentXVarBind(oid, AgentXVarBind.INTEGER, value);
        }
        case 2: // dot1dStpPortPriority
        {
            int value = ((Dot1dStpPortEntry)entry).get_dot1dStpPortPriority();
            return new AgentXVarBind(oid, AgentXVarBind.INTEGER, value);
        }
        case 3: // dot1dStpPortState
        {
            int value = ((Dot1dStpPortEntry)entry).get_dot1dStpPortState();
            return new AgentXVarBind(oid, AgentXVarBind.INTEGER, value);
        }
        case 4: // dot1dStpPortEnable
        {
            int value = ((Dot1dStpPortEntry)entry).get_dot1dStpPortEnable();
            return new AgentXVarBind(oid, AgentXVarBind.INTEGER, value);
        }
        case 5: // dot1dStpPortPathCost
        {
            int value = ((Dot1dStpPortEntry)entry).get_dot1dStpPortPathCost();
            return new AgentXVarBind(oid, AgentXVarBind.INTEGER, value);
        }
        case 6: // dot1dStpPortDesignatedRoot
        {
            byte[] value = ((Dot1dStpPortEntry)entry).get_dot1dStpPortDesignatedRoot();
            return new AgentXVarBind(oid, AgentXVarBind.OCTETSTRING, value);
        }
        case 7: // dot1dStpPortDesignatedCost
        {
            int value = ((Dot1dStpPortEntry)entry).get_dot1dStpPortDesignatedCost();
            return new AgentXVarBind(oid, AgentXVarBind.INTEGER, value);
        }
        case 8: // dot1dStpPortDesignatedBridge
        {
            byte[] value = ((Dot1dStpPortEntry)entry).get_dot1dStpPortDesignatedBridge();
            return new AgentXVarBind(oid, AgentXVarBind.OCTETSTRING, value);
        }
        case 9: // dot1dStpPortDesignatedPort
        {
            byte[] value = ((Dot1dStpPortEntry)entry).get_dot1dStpPortDesignatedPort();
            return new AgentXVarBind(oid, AgentXVarBind.OCTETSTRING, value);
        }
        case 10: // dot1dStpPortForwardTransitions
        {
            long value = ((Dot1dStpPortEntry)entry).get_dot1dStpPortForwardTransitions();
            return new AgentXVarBind(oid, AgentXVarBind.COUNTER32, value);
        }
        case 11: // dot1dStpPortPathCost32
        {
            int value = ((Dot1dStpPortEntry)entry).get_dot1dStpPortPathCost32();
            return new AgentXVarBind(oid, AgentXVarBind.INTEGER, value);
        }
        }

        return null;
    }

    public int setEntry(AgentXSetPhase phase,
                        AgentXEntry entry,
                        long column,
                        AgentXVarBind vb)
    {

        switch ((int)column) {
        case 2: // dot1dStpPortPriority
        {
            if (vb.getType() != AgentXVarBind.INTEGER)
                return AgentXResponsePDU.WRONG_TYPE;
            else
                return ((Dot1dStpPortEntry)entry).set_dot1dStpPortPriority(phase, vb.intValue());
        }
        case 4: // dot1dStpPortEnable
        {
            if (vb.getType() != AgentXVarBind.INTEGER)
                return AgentXResponsePDU.WRONG_TYPE;
            else
                return ((Dot1dStpPortEntry)entry).set_dot1dStpPortEnable(phase, vb.intValue());
        }
        case 5: // dot1dStpPortPathCost
        {
            if (vb.getType() != AgentXVarBind.INTEGER)
                return AgentXResponsePDU.WRONG_TYPE;
            else
                return ((Dot1dStpPortEntry)entry).set_dot1dStpPortPathCost(phase, vb.intValue());
        }
        case 11: // dot1dStpPortPathCost32
        {
            if (vb.getType() != AgentXVarBind.INTEGER)
                return AgentXResponsePDU.WRONG_TYPE;
            else
                return ((Dot1dStpPortEntry)entry).set_dot1dStpPortPathCost32(phase, vb.intValue());
        }
        }

        return AgentXResponsePDU.NOT_WRITABLE;
    }

}

