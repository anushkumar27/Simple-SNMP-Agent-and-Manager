/*
 * This Java file has been generated by smidump 0.4.5. It
 * is intended to be edited by the application programmer and
 * to be used within a Java AgentX sub-agent environment.
 *
 * $Id: RpMauEntryImpl.java 1458 2006-05-29 16:21:11Z strauss $
 */

/**
    This class extends the Java AgentX (JAX) implementation of
    the table row rpMauEntry defined in MAU-MIB.
 */

import jax.AgentXOID;
import jax.AgentXSetPhase;
import jax.AgentXResponsePDU;
import jax.AgentXEntry;

public class RpMauEntryImpl extends RpMauEntry
{

    // constructor
    public RpMauEntryImpl(int rpMauGroupIndex,
                      int rpMauPortIndex,
                      int rpMauIndex)
    {
        super(rpMauGroupIndex,
            rpMauPortIndex,
            rpMauIndex);
    }

    public int get_rpMauGroupIndex()
    {
        return rpMauGroupIndex;
    }

    public int get_rpMauPortIndex()
    {
        return rpMauPortIndex;
    }

    public int get_rpMauIndex()
    {
        return rpMauIndex;
    }

    public AgentXOID get_rpMauType()
    {
        return rpMauType;
    }

    public int get_rpMauStatus()
    {
        return rpMauStatus;
    }

    public int set_rpMauStatus(AgentXSetPhase phase, int value)
    {
        switch (phase.getPhase()) {
        case AgentXSetPhase.TEST_SET:
            break;
        case AgentXSetPhase.COMMIT:
            undo_rpMauStatus = rpMauStatus;
            rpMauStatus = value;
            break;
        case AgentXSetPhase.UNDO:
            rpMauStatus = undo_rpMauStatus;
            break;
        case AgentXSetPhase.CLEANUP:
            break;
        default:
            return AgentXResponsePDU.PROCESSING_ERROR;
        }
        return AgentXResponsePDU.NO_ERROR;
    }
    public int get_rpMauMediaAvailable()
    {
        return rpMauMediaAvailable;
    }

    public long get_rpMauMediaAvailableStateExits()
    {
        return rpMauMediaAvailableStateExits;
    }

    public int get_rpMauJabberState()
    {
        return rpMauJabberState;
    }

    public long get_rpMauJabberingStateEnters()
    {
        return rpMauJabberingStateEnters;
    }

    public long get_rpMauFalseCarriers()
    {
        return rpMauFalseCarriers;
    }

}

