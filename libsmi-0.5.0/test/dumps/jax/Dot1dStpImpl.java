/*
 * This Java file has been generated by smidump 0.5.0. It
 * is intended to be edited by the application programmer and
 * to be used within a Java AgentX sub-agent environment.
 *
 * $Id$
 */

/**
    This class extends the Java AgentX (JAX) implementation of
    the scalar group dot1dStp defined in BRIDGE-MIB.
 */

import java.util.Vector;
import java.util.Enumeration;
import jax.AgentXOID;
import jax.AgentXSetPhase;
import jax.AgentXResponsePDU;

public class Dot1dStpImpl extends Dot1dStp
{

    public int get_dot1dStpProtocolSpecification()
    {
        return dot1dStpProtocolSpecification;
    }

    public int get_dot1dStpPriority()
    {
        return dot1dStpPriority;
    }

    public int set_dot1dStpPriority(AgentXSetPhase phase, int value)
    {
        switch (phase.getPhase()) {
        case AgentXSetPhase.TEST_SET:
            break;
        case AgentXSetPhase.COMMIT:
            undo_dot1dStpPriority = dot1dStpPriority;
            dot1dStpPriority = value;
            break;
        case AgentXSetPhase.UNDO:
            dot1dStpPriority = undo_dot1dStpPriority;
            break;
        case AgentXSetPhase.CLEANUP:
            undo_dot1dStpPriority = -1; // TODO: better check!
            break;
        default:
            return AgentXResponsePDU.PROCESSING_ERROR;
        }
        return AgentXResponsePDU.NO_ERROR;
    }

    public long get_dot1dStpTimeSinceTopologyChange()
    {
        return dot1dStpTimeSinceTopologyChange;
    }

    public long get_dot1dStpTopChanges()
    {
        return dot1dStpTopChanges;
    }

    public byte[] get_dot1dStpDesignatedRoot()
    {
        return dot1dStpDesignatedRoot;
    }

    public int get_dot1dStpRootCost()
    {
        return dot1dStpRootCost;
    }

    public int get_dot1dStpRootPort()
    {
        return dot1dStpRootPort;
    }

    public int get_dot1dStpMaxAge()
    {
        return dot1dStpMaxAge;
    }

    public int get_dot1dStpHelloTime()
    {
        return dot1dStpHelloTime;
    }

    public int get_dot1dStpHoldTime()
    {
        return dot1dStpHoldTime;
    }

    public int get_dot1dStpForwardDelay()
    {
        return dot1dStpForwardDelay;
    }

    public int get_dot1dStpBridgeMaxAge()
    {
        return dot1dStpBridgeMaxAge;
    }

    public int set_dot1dStpBridgeMaxAge(AgentXSetPhase phase, int value)
    {
        switch (phase.getPhase()) {
        case AgentXSetPhase.TEST_SET:
            break;
        case AgentXSetPhase.COMMIT:
            undo_dot1dStpBridgeMaxAge = dot1dStpBridgeMaxAge;
            dot1dStpBridgeMaxAge = value;
            break;
        case AgentXSetPhase.UNDO:
            dot1dStpBridgeMaxAge = undo_dot1dStpBridgeMaxAge;
            break;
        case AgentXSetPhase.CLEANUP:
            undo_dot1dStpBridgeMaxAge = -1; // TODO: better check!
            break;
        default:
            return AgentXResponsePDU.PROCESSING_ERROR;
        }
        return AgentXResponsePDU.NO_ERROR;
    }

    public int get_dot1dStpBridgeHelloTime()
    {
        return dot1dStpBridgeHelloTime;
    }

    public int set_dot1dStpBridgeHelloTime(AgentXSetPhase phase, int value)
    {
        switch (phase.getPhase()) {
        case AgentXSetPhase.TEST_SET:
            break;
        case AgentXSetPhase.COMMIT:
            undo_dot1dStpBridgeHelloTime = dot1dStpBridgeHelloTime;
            dot1dStpBridgeHelloTime = value;
            break;
        case AgentXSetPhase.UNDO:
            dot1dStpBridgeHelloTime = undo_dot1dStpBridgeHelloTime;
            break;
        case AgentXSetPhase.CLEANUP:
            undo_dot1dStpBridgeHelloTime = -1; // TODO: better check!
            break;
        default:
            return AgentXResponsePDU.PROCESSING_ERROR;
        }
        return AgentXResponsePDU.NO_ERROR;
    }

    public int get_dot1dStpBridgeForwardDelay()
    {
        return dot1dStpBridgeForwardDelay;
    }

    public int set_dot1dStpBridgeForwardDelay(AgentXSetPhase phase, int value)
    {
        switch (phase.getPhase()) {
        case AgentXSetPhase.TEST_SET:
            break;
        case AgentXSetPhase.COMMIT:
            undo_dot1dStpBridgeForwardDelay = dot1dStpBridgeForwardDelay;
            dot1dStpBridgeForwardDelay = value;
            break;
        case AgentXSetPhase.UNDO:
            dot1dStpBridgeForwardDelay = undo_dot1dStpBridgeForwardDelay;
            break;
        case AgentXSetPhase.CLEANUP:
            undo_dot1dStpBridgeForwardDelay = -1; // TODO: better check!
            break;
        default:
            return AgentXResponsePDU.PROCESSING_ERROR;
        }
        return AgentXResponsePDU.NO_ERROR;
    }

}

