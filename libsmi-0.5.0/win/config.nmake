# @(#) $Id: config.nmake 1657 2009-12-28 19:43:45Z schoenw $
#
#
#

##### Microsoft Visual C / Studio Variant #####
# for the different Studios, see: 
#      http://en.wikipedia.org/wiki/Microsoft_Visual_Studio
# only one of the following MSVC_VARIANT settings should be used
# BTW: The "Microsoft Visual C++ Toolkit 2003" DOESN'T WORK for 
#      Wireshark!(untested for libsmi).

# "Microsoft Visual Studio 6.0"
# Visual C++ 6.0, _MSC_VER 1200, msvcrt.dll (version 6)
MSVC_VARIANT=MSVC6

# "Microsoft Visual Studio .NET (2002)"
# Visual C++ 7.0, _MSC_VER 1300, msvcr70.dll
#MSVC_VARIANT=MSVC2002

# "Microsoft .Net Framework SDK Version 1.0"
# needs additional Platform SDK installation
# Visual C++ 7.0, _MSC_VER 1300, msvcr70.dll
#MSVC_VARIANT=DOTNET10

# "Microsoft Visual Studio .NET 2003"
# Visual C++ 7.1, _MSC_VER 1310, msvcr71.dll
#MSVC_VARIANT=MSVC2003

# "Microsoft .Net Framework SDK Version 1.1"
# needs additional Platform SDK installation
# Visual C++ 7.1, _MSC_VER 1310, msvcr71.dll
#MSVC_VARIANT=DOTNET11

# "Microsoft Visual Studio 2005"
# Visual C++ 8.0, _MSC_VER 1400, msvcr80.dll
#MSVC_VARIANT=MSVC2005

# "Microsoft Visual C++ 2005 Express Edition"
# needs additional Platform SDK installation
# Visual C++ 8.0, _MSC_VER 1400, msvcr80.dll
#MSVC_VARIANT=MSVC2005EE

# "Microsoft .Net Framework 2.0 SDK"
# needs additional Platform SDK installation
# Visual C++ 8.0, _MSC_VER 1400, msvcr80.dll
#MSVC_VARIANT=DOTNET20

# "Microsoft Visual C++ 2008 Express Edition"
# needs additional Platform SDK installation?
# Visual C++ 9.0, _MSC_VER 1500, msvcr90.dll
#
# THIS VARIANT CURRENTLY WON'T WORK - YOU HAVE BEEN WARNED!
# This comment is for Wireshark don't know about libsmi
#MSVC_VARIANT=MSVC2008EE


!IFDEF ENABLE_LIBSMI_DLL
CVARSDLL=-DWIN32 -DNULL=0 -D_MT -D_DLL /MD
!ENDIF


##
## Project directories -- these may need to be customized for your site
##
## ROOT --	top of the source tree.
## TMPDIR --	location for .obj files.
## TOOLS32 --	location of VC++ compiler installation.
##
ROOT	= .\..
TMPDIR	= .
#TOOLS32	= C:\MSDEV
!IF "$(MSVC_VARIANT)" == "MSVC6"
TOOLS32        = C:\PROGRA~1\MICROS~2\VC98
!ELSEIF "$(MSVC_VARIANT)" == "MSVC2005"
TOOLS32	= "C:\Program Files\Microsoft Visual Studio 8\VC"
!ELSE
!ERROR MSVC_VARIANT unknown
!ENDIF

##
## Installation paths: 
##
## MIBROOT  -- definition for default search path (unix-style)
## MIBDIR   -- same in windows style
## PIBDIR   -- same in windows style
## BINDIR   -- destination for the binaries (smidump.exe, ...)
## LIBDIR   -- destination for the library (smi.lib)
##
MIBROOT = c:/smi/mibs
PIBROOT = c:/smi/pibs
INSTROOT = c:\smi
MIBDIR = $(INSTROOT)\mibs
PIBDIR = $(INSTROOT)\pibs
BINDIR = $(INSTROOT)\bin
LIBDIR = $(INSTROOT)\lib
INCDIR = $(INSTROOT)\include

#MIBROOT = c:/usr/local/snmp/mibs
#PIBROOT = c:/usr/local/snmp/pibs
#INSTROOT = c:\usr\local
#MIBDIR = $(INSTROOT)\snmp\mibs
#PIBDIR = $(INSTROOT)\snmp\pibs
#BINDIR = $(INSTROOT)\wbin
#LIBDIR = $(INSTROOT)\wbin

##
## Visual C++ tools
##
PATH=$(TOOLS32)\bin;$(PATH)

cc32	= cl
CP      = copy
RM      = del
MKDIR	= md

##
## Definitions:
##
# DEBUG = -W3 -Zi -Od /Yd
# DEBUG = /W3 /Zi /Od /DEBUG /GS /Wp64 /Yd
INCLUDES = -I$(ROOT)\lib -I$(ROOT)\win -I$(TOOLS32)\include
DEFINES = $(DEBUG) -D_CRT_SECURE_NO_DEPRECATE=1 -DYY_NO_UNISTD_H


#
# If you want to build libsmi.dll, you should uncomment the
# following line.
ENABLE_LIBSMI_DLL=USE
